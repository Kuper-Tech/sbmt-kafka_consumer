# frozen_string_literal: true

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sso/events/shopper_registration.proto

require "google/protobuf"

require "google/protobuf/timestamp_pb"

descriptor_data = "\n%sso/events/shopper_registration.proto\x12\x03sso\x1a\x1fgoogle/protobuf/timestamp.proto\"d\n\x10UserRegistration\x12\x11\n\tuser_uuid\x18\x01 \x01(\t\x12\r\n\x05phone\x18\x02 \x01(\t\x12.\n\ncreated_at\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x19Z\x17grpc/user_registrationsb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require "google/protobuf/descriptor_pb"
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["google.protobuf.Timestamp", "google/protobuf/timestamp.proto"]
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Sso
  UserRegistration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("sso.UserRegistration").msgclass
end
